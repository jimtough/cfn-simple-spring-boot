---

Parameters:
  CodeDeployApplicationName:
    Type: String
    Default: "codedeploy-app-simple-spring-boot"
  CodeDeployDeploymentGroupName:
    Type: String
    Default: "codedeploy-deployment-group-simple-spring-boot"


Resources:

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Ref CodeDeployApplicationName
      ComputePlatform: Server

  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      #AlarmConfiguration:
      #  AlarmConfiguration
      ApplicationName: !Ref CodeDeployApplication
      #AutoRollbackConfiguration:
      #  AutoRollbackConfiguration
      #AutoScalingGroups:
      #  - String
      #Deployment:
      #  Deployment
      #DeploymentConfigName: String
      DeploymentGroupName: !Ref CodeDeployDeploymentGroupName
      #DeploymentStyle:
      #  DeploymentType: IN_PLACE
      Ec2TagFilters:
        - Key: AppName
          Value: simple-spring-boot
          Type: KEY_AND_VALUE
      #Ec2TagSet:
      #  EC2TagSet
      #LoadBalancerInfo:
      #  LoadBalancerInfo
      #OnPremisesInstanceTagFilters:
      #  - TagFilter
      #OnPremisesTagSet:
      #  OnPremisesTagSet
      ServiceRoleArn: !GetAtt CodeDeployRole.Arn
      #TriggerConfigurations:
      #  - TriggerConfig

  CodeDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join ['', [!Ref 'AWS::Region', -, 'CodeDeployRole', -, !Ref 'AWS::StackName']]
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codedeploy.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: MyInlineCodeDeployPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:GetObject'
                # TODO Figure out which of the codedeploy permissions are actually needed
                - 'codedeploy:*'
                # TODO Figure out which of the log permissions are actually needed
                - 'logs:*'
                # TODO Figure out which of the ec2 permissions are actually needed
                - 'ec2:*'
                Effect: Allow
                Resource: '*'
