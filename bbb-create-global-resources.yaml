---
Parameters:
  VPCNameTag:
    Description: Name tag that will be assigned to the VPC
    Type: String
    Default: stack-created-vpc
    AllowedValues:
    - stack-created-vpc
    - my-vpc
    - custom-vpc
    - toothbrush


Resources:
  myStackCreatedVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 192.168.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Ref VPCNameTag
      - Key: creator-stack-name
        Value: !Ref AWS::StackName
      - Key: creator-stack-id
        Value: !Ref AWS::StackId
  myStackCreatedSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      #AssignIpv6AddressOnCreation: Boolean
      AvailabilityZone: !Sub ${AWS::Region}a
      CidrBlock: 192.168.1.0/24
      #Ipv6CidrBlock: String
      #MapPublicIpOnLaunch: Boolean
      Tags:
      - Key: Name
        Value: !Sub ${VPCNameTag}-subnet-a
      VpcId: !Ref myStackCreatedVPC
  myStackCreatedSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      #AssignIpv6AddressOnCreation: Boolean
      AvailabilityZone: !Sub ${AWS::Region}b
      CidrBlock: 192.168.2.0/24
      #Ipv6CidrBlock: String
      #MapPublicIpOnLaunch: Boolean
      Tags:
       - Key: Name
         Value: !Sub ${VPCNameTag}-subnet-a
      VpcId: !Ref myStackCreatedVPC
  myStackCreatedInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${VPCNameTag}-igw
  myStackCreatedRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: myStackCreatedVPC
      Tags:
      - Key: Name
        Value: !Sub ${VPCNameTag}-rtb
  myStackCreatedRouteA:
    Type: AWS::EC2::Route
    Properties:
       RouteTableId:
         Ref: myStackCreatedRouteTable
       DestinationCidrBlock: 0.0.0.0/0
       GatewayId:
         Ref: myStackCreatedInternetGateway
  myStackCreatedInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref myStackCreatedVPC
      InternetGatewayId: !Ref myStackCreatedInternetGateway
  myStackCreatedSubnetRouteTableAssociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: myStackCreatedRouteTable
      SubnetId:
        Ref: myStackCreatedSubnetA
  myStackCreatedSubnetRouteTableAssociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: myStackCreatedRouteTable
      SubnetId:
        Ref: myStackCreatedSubnetB


Outputs:
  MyStackCreatedVPCOutput:
    Value: !Ref myStackCreatedVPC
    Description: VPC id of my stack-created VPC
    Export:
      Name: StackCreatedVPC
  MyStackCreatedSubnetAOutput:
    Value: !Ref myStackCreatedSubnetA
    Description: Subnet id of my stack-created Subnet A
    Export:
      Name: StackCreatedSubnetA
  MyStackCreatedSubnetBOutput:
    Value: !Ref myStackCreatedSubnetB
    Description: Subnet id of my stack-created Subnet B
    Export:
      Name: StackCreatedSubnetB
