---

Parameters:
  CodeBuildProjectName:
    Description: Name of CodeBuild project
    Type: String
    Default: codebuild-simple-spring-boot
  CodeBuildProjectDescription:
    Description: Description of CodeBuild project
    Type: String
    Default: CodeBuild project for the simple-spring-boot app
  CodeBuildProjectCloudWatchLogsGroupName:
    Type: String
  CodeBuildProjectCloudWatchLogsStreamName:
    Type: String


Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref CodeBuildProjectName
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        EncryptionDisabled: true
        Location: !ImportValue GlobalDefaultS3Bucket
        NamespaceType: NONE
        Packaging: NONE
        Path: foobar
        Type: S3
      Cache:
        Type: NO_CACHE
      Description: !Ref CodeBuildProjectDescription
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        # KEEP THIS - these examples will likely be useful later...
        # EnvironmentVariables:
        #   - Name: varName1
        #     Value: varValue1
        #   - Name: varName2
        #     Value: varValue2
        #     Type: PLAINTEXT
        #   - Name: varName3
        #     Value: /CodeBuild/testParameter
        #     Type: PARAMETER_STORE
      LogsConfig:
        CloudWatchLogs:
          GroupName: !Ref CodeBuildProjectCloudWatchLogsGroupName
          Status: ENABLED
          StreamName: !Ref CodeBuildProjectCloudWatchLogsStreamName
        S3Logs:
          EncryptionDisabled: true
          Location: !Sub
          - ${Bucket}/CodeBuild-logs
          - { Bucket: !ImportValue GlobalDefaultS3Bucket }
          Status: ENABLED
      Source:
        GitCloneDepth: 0
        Location: https://git-codecommit.us-east-1.amazonaws.com/v1/repos/simple-spring-boot
        Type: CODECOMMIT
      TimeoutInMinutes: 10
      VpcConfig:
        VpcId: !Ref CodeBuildVPC
        Subnets: [!Ref CodeBuildSubnet]
        SecurityGroupIds: [!Ref CodeBuildSecurityGroup]
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codebuild.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 'logs:*'
                - 'ec2:CreateNetworkInterface'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DeleteNetworkInterface'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeDhcpOptions'
                - 'ec2:DescribeVpcs'
                - 'ec2:CreateNetworkInterfacePermission'
                Effect: Allow
                Resource: '*'
  CodeBuildVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: name
          Value: codebuild
  CodeBuildSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: CodeBuildVPC
      CidrBlock: 10.0.1.0/24
  CodeBuildSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Codebuild Internet Group
      GroupDescription: 'CodeBuild SecurityGroup'
      VpcId: !Ref CodeBuildVPC
